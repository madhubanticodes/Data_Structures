//Code by Madhubanti Mitra
//19/78015
#include <iostream>

using namespace std;
int s1[5],s2[5];

class QueueUsingStack
{
  public:
  int top1=-1;
  int top2=-1;
  
  void push1(int data)
  {
      if(top1==4)
      {
          cout<<"Overflow";
      }
      else
      {
          top1++;
          s1[top1]=data;
      }
  }
  void push2(int data)
  {
      if(top2==4)
      {
          cout<<"Overflow";
      }
      else
      {
          top2++;
          s2[top2]=data;
      }
  }
  int pop1()
  {
     return s1[top1--]; 
  }
  int pop2()
  {
      return s2[top2--];
  }
  void enqueue(int ele)
  {int x;
      while(top1!=-1)
      {
          
          x=pop1();
          push2(x);
      }
      push1(ele);
      while(top2!=-1)
      {
         x=pop2();
         push1(x);
      }
  }
  void dequeue()
  {
      pop1();
  }
  void display()
  {   cout<<"The Queue is:\n";
      for(int i=top1;i>=0;i--)
      {
          cout<<s1[i]<<" ";
      }
  }
};
int main()
{
    QueueUsingStack q;
    q.enqueue(5);
    q.enqueue(2);
    q.enqueue(7);
    q.enqueue(1);
    q.enqueue(0);
    q.display();
    q.dequeue();
    q.dequeue();
    q.display();
}
