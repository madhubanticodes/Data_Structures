//Code by Madhubanti Mitra
//19/78015

#include<iostream>
using namespace std;

int queue[5];
template <class X>
 class CircularQueueUsingArray
{
  public:
  int front=-1;
  int rear=-1;
  
  void enqueue(int x)
 {
   if(front==-1 && rear==-1)
     {
       front=rear=0;
       queue[rear]=x;
     }
   else if(((rear+1)%5)==front)
     {
       cout<<"Queue is full";
     }
  else
    {
       rear=(rear+1)%5;
       queue[rear]=x;
    }
 }

  void dequeue()
{
  if(front==-1 && rear==-1)
   {
     cout<<"Queue is empty";
   }
  else if(front==rear)
   {
     front=rear=-1;
   }
  else
   {
     cout<<"\nDeleted Element is: "<<queue[front]<<"\n";
     front=(front+1)%5;
   }
}

  void display()
{
   int i=front;
   if(front==-1 && rear==-1)
    {
      cout<<"Queue is empty";
    }
   else
    {
      cout<<"\nQueue is: ";
      while(i!=rear)
      {
        cout<<queue[i];
        i=(i+1)%5;
      }
      cout<<queue[rear];
   }
}
};

int main()
{
  CircularQueueUsingArray<int> q;
  q.enqueue(5);
  q.enqueue(7);
  q.enqueue(4);
  q.enqueue(0);
  q.enqueue(2);
  q.display();
  q.dequeue();
  q.dequeue();
  q.display();
  q.enqueue(6);
  q.enqueue(1);
  q.display();
}
