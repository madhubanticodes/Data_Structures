#include<iostream>

using namespace std;
class Upper
{
    int *a;//array
    int n;
public:
    Upper(int size=30)
    {
        n=size;
        if(size!=0)
        a=new int[n*n+1/2];
        else
            a=0;

    }
    ~Upper()
    {
        delete []a;

    }
    void store(int,int,int);
    int retrieve(int,int);
    void display();

};

 void Upper::store(int x,int i,int j)
 {
     if(i<0 || i>n || j<0 || j>n)
     {
         cout<<"Out of Bound!!";
         exit(0);
     }
     else if(i<=j)
     {
         int k=(n*i)-i*(i+1)/2+j;
         a[k]=x;
     }

 }

 int Upper::retrieve(int i,int j)
 {
    if(i<0 || j<0 || i>n || j>n)
    {
        cout<<"Out of Bound!!";
        exit(0);
    }
    else if(i>j)
    {
        return 0;
    }

    else
    {
       int k=a[(n*i)-i*(i+1)/2+j];
       return k;
    }
 }

 void Upper::display()
 {
     for(int i=1;i<=n/2;i++)
     {   cout<<"\n";
         for(int j=1;j<=n/2;j++)
         {
             if(i>j)
                cout<<"0"<<"\t";
             else
             {
                  int k=(n*i)-i*(i+1)/2+j;
                  cout<<a[k]<<"\t";
             }
         }
     }
 }

 int main()
 {int r,i,j,x;
    cout<<"\nEnter number of elements : ";
    cin>>r;
    Upper d(r);
    for(i=1;i<=r/2;i++)
    {
        for(j=1;j<=r/2;j++)
        {
           if(i<=j)
           {
               cout<<"\nEnter the elements: ";
               cin>>x;
               d.store(x,i,j);
           }
        }

    }
    cout<<"\nThe Upper Triangular matrix is : ";
    d.display();
    cout<<"\nEnter the position for retrieval : ";
    cin>>i>>j;
    int value=d.retrieve(i,j);
    cout<<"\nRetrieved value is : "<<value;
    return 0;

 }


